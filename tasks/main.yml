---
# tasks file for apigee-opdk-setup-os

#- name: Configure AWS AMI OS package manager repositories for Apigee
#  shell: "yum-config-manager --enable rhui-REGION-rhel-server-extras rhui-REGION-rhel-server-optional"
#  when: ansible_bios_version | lower | search('amazon') and ansible_os_family | lower == 'redhat' and ansible_distribution_major_version | version_compare('6', '>')

# TODO: Look up the ansible_distribution name for RHEL systems
#- name: If using RHEL then register RHEL on RHN
#  shell: "subscription-manager register --username={{ rhel_user_name }} --password={{ rhel_password }} --auto-attach"
#  when: ansible_bios_version | lower | search('amazon') and ansible_os_family | lower == 'redhat' and ansible_distribution_major_version | version_compare('7', '>')

- name: Yum clean
  become: yes
  shell: "yum clean all"

- name: Create pip config folder
  file:
    path: "{{ pip_conf_dir }}"
    state: directory
  when: pip_conf_dir is defined

- name: Configure pip
  template:
    src: pip.conf.j2
    dest: "{{ pip_conf_dir }}/pip.conf"
  when: pip_conf_dir is defined and pip_index_url is defined

- name: Do not use proxy definitions
  include: with_no_proxy.yml
  when: http_proxy is not defined and https_proxy is not defined

- name: Use proxy definitions
  include: with_proxy.yml
  when: http_proxy is defined and https_proxy is defined

- name: Start rngd service with no proxy
  service:
    name: rngd
    enabled: yes
    state: started

- name: Update vm.swappiness with no proxy
  become: yes
  sysctl:
    name: vm.swappiness
    value: '{{ vm_swappiness }}'
    state: present

- name: Disable Default IPV6 with no proxy
  become: yes
  sysctl:
    name: net.ipv6.conf.default.disable_ipv6
    value: 1
    sysctl_set: yes
  tags: ['ipv6']

- name: Disable All IPV6 with no proxy
  become: yes
  sysctl:
    name: net.ipv6.conf.all.disable_ipv6
    value: 1
    sysctl_set: yes
  tags: ['ipv6']

- name: Update for apigee installation environment with no proxy
  become: yes
  lineinfile:
    dest: /etc/environment
    regexp: "^export CONTINUE_ON_WARNING="
    line: 'export CONTINUE_ON_WARNING={{ apigee_continue_on_warning }}'
    backup: yes

- name: Update pip
  become: yes
  pip:
    name: pip
    state: latest

- name: Update python packages
  become: yes
  pip:
    name: '{{ item }}'
    state: present
  with_items: "{{ pip_packages }}"
